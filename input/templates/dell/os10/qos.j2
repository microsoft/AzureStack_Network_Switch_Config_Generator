! qos.go.tmpl-qos
{% set prefix = qos.name_prefix %}

wred ecn
 random-detect color green minimum-threshold 150 maximum-threshold 1500 drop-probability 100
 random-detect ecn 

{# -------- Class Maps for Network QoS - match qos-group -------- #}
{%- for tc in qos.traffic_classes if tc.cos != 0 %}
class-map type network-qos {{ prefix }}_Dot1p_{{ tc.cos }}
 match qos-group {{ tc.cos }}
{%- endfor %}

{# -------- Class Maps for Queuing - match queue -------- #}
{%- for tc in qos.traffic_classes %}
class-map type queuing {{ prefix }}_EtsQue_{{ tc.cos }}
 match queue {{ tc.cos }}
{%- endfor %}

{# -------- Trust dot1p-map (CoS to QoS group) -------- #}
trust dot1p-map {{ prefix }}_Dot1p
{%- for tc in qos.traffic_classes %}
 qos-group {{ tc.cos }} dot1p {{ tc.cos }}
{%- endfor %}

{# -------- QoS-map: map qos-group to queue -------- #}
qos-map traffic-class {{ prefix }}_TrafficClass
{%- for tc in qos.traffic_classes if tc.cos != 0 %}
 traffic-class {{ tc.cos }} queue {{ tc.cos }}
{%- endfor %}

{# -------- QoS-map: map qos-group to PFC -------- #}
{%- for tc in qos.traffic_classes if tc.cos != 0 %}
 queue {{ tc.cos }} qos-group {{ tc.cos }}
{%- endfor %}

{# -------- Policy-map for PFC (Pause Control) -------- #}
policy-map type network-qos {{ prefix }}_NetworkQoS
{%- for tc in qos.traffic_classes if tc.pause %}
 class {{ prefix }}_Dot1p_{{ tc.cos }}
  pause
  pfc-cos {{ tc.cos }}
{%- endfor %}

{# -------- Queuing policy with ETS and ECN -------- #}
policy-map type queuing {{ prefix }}_Queuing
{%- for tc in qos.traffic_classes if tc.cos != 0 %}
 class {{ prefix }}_EtsQue_{{ tc.cos }}
  queue {{ tc.cos }}
  {%- if tc.pause %}
  pause
  {%- endif %}
{%- endfor %}

{# -------- ETS Queuing Configuration -------- #}
{%- for tc in qos.traffic_classes %}
 class {{ prefix }}_EtsQue_{{ tc.cos }}
  bandwidth percent {{ tc.bandwidth_pct }}
  {%- if tc.ecn %}
  random-detect ecn
  {%- endif %}
{%- endfor %}

{# -------- Apply System QoS Settings -------- #}
system qos
 trust-map dot1p {{ prefix }}_Dot1p
 ets mode on